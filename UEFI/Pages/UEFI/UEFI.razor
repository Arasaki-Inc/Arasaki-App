@page "/"
@page "/uefi"

<PageTitle>Arasaki UEFI</PageTitle>

<div id="uefi" class="row page justify-content-center">
    <div class="col">
        <div class="row align-items-center">
            <div class="col-auto">
                <h1>A</h1>
                <h1>R</h1>
                <h1>A</h1>
                <h1>S</h1>
                <h1>A</h1>
                <h1>K</h1>
                <h1>I</h1>
            </div>
            <div class="col-md-auto col">
                <img id="logo" src="/favicon.svg" alt="Logo" />
            </div>
            <div class="col-auto">
                <div class="row">
                    <div class="col-auto">
                        <h1>U</h1>
                        <h1>E</h1>
                        <h1>F</h1>
                        <h1>I</h1>
                    </div>
                    <div class="col-auto">
                        <h1 class="uefi">nified</h1>
                        <h1 class="uefi">xtensible</h1>
                        <h1 class="uefi">irmware</h1>
                        <h1 class="uefi">nterface</h1>
                    </div>
                </div>
            </div>
        </div>
        @if (IsMobileScreen)
        {
            <div class="row">
                <div class="col">
                    <div id="setup-button" onclick="setupAssembly()">Start Here</div>
                </div>
            </div>
        }
        <div class="row justify-content-begin">
            <div class="col-md-5 col text-block">
                <div class="row align-items-center">
                    <div class="col-auto">
                        <i class="fas fa-exclamation-triangle" style="font-size:50px;"></i>
                    </div>
                    <div class="col">
                        <p>
                            The setup process will only take at most 2 minutes, it is highly recommended that you look at the options provided throughout
                            ESPECIALLY on devices which use a battery and/or mobile data!
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <div class="row justify-content-begin">
            <div class="col-md-5 col text-block">
                <h1>Welcome To Arasaki</h1>
                <hr />
                <p>
                    The Arasaki UEFI is a ways and means of setting up your app experience as well as changing things at any other time,
                    or you may simply be having issues with the app and its in need of a refresh. Dont be scared, this UEFI is as straight
                    forward as possible and it is virtually impossible for you to do something bad with it.
                </p>
                <p>
                    When the app fails, there is an update available or something else which needs attention outside of the app,
                    you will be brought here to resolve anything which arises. Check the about page for forms of contact!
                </p>
                <hr />
                <p>
                    Home to the cutting edge corner of the verse, where each and every citizen, pirate, syndicate leader and alike can learn a little more.
                </p>
                <p>
                    The Arasaki App is a tool for Star Citizen to help you detrmine the best armour for your needs, the most suitable sustainance
                    for that big mission, your next luxury yacht but, thats not all. Arasaki contains a database of the Verse as it is, cataloging
                    every planetary/celestial body, space station and more right at your fingertips.
                </p>
            </div>
            @if (!IsMobileScreen)
            {
                <div class="col-auto">
                    <div id="setup-button" onclick="setupAssembly()">Start Here</div>
                </div>
            }
        </div>
    </div>
</div>

@inject IJSRuntime JSRuntime
@inject JSInterop.UIInterop UIInterop

@code
{
    private bool IsMobileScreen = true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            IsMobileScreen = await UIInterop.IsMobileScreen(JSRuntime);
            if (!IsMobileScreen) await InvokeAsync(StateHasChanged);
        }
    }
}