@if (IsMobileScreen)
{
    <div id="navigation-bar-toggle-button-wrapper" class="@(IsNavigationBarVisible ? "container-fluid active" : "container-fluid")" @onclick="@(() => IsNavigationBarVisible = !IsNavigationBarVisible)">
        <div class="row justify-content-center align-items-center">
            <div class="col-auto">
                <div id="navigation-bar-toggle-button"><i class="fa-solid fa-bars"></i></div>
            </div>
        </div>
    </div>
}
@if (IsNavigationBarVisible)
{
    <div id="navigation-bar" class="container-fluid">
        <div class="row">
            <div class="col">
                <NavLink class="@(IsSpecialActive ? "row active" : "row")" href="/uefi" Match="NavLinkMatch.All" @onclick="@(() => SetPageContext("/uefi"))">
                    <div class="col">
                        @if (!IsMobileScreen)
                        {
                            <div class="row justify-content-center">
                                <div class="col-auto">
                                    <img src="/favicon.svg" alt="Logo" />
                                </div>
                            </div>
                        }
                        <div class="row">
                            <div class="col">
                                <p>Arasaki UEFI</p>
                            </div>
                        </div>
                    </div>
                </NavLink>
                <NavLink class="row" href="/uefi/update" Match="NavLinkMatch.All" @onclick="@(() => SetPageContext("/uefi/update"))">
                    <div class="col">
                        @if (!IsMobileScreen)
                        {
                            <div class="row justify-content-center">
                                <div class="col-auto">
                                    <i class="fa-solid fa-cloud"></i>
                                </div>
                            </div>
                        }
                        <div class="row">
                            <div class="col">
                                <p>OS Update</p>
                            </div>
                        </div>
                    </div>
                </NavLink>
                <NavLink class="row" href="/uefi/settings" Match="NavLinkMatch.All" @onclick="@(() => SetPageContext("/uefi/settings"))">
                    <div class="col">
                        @if (!IsMobileScreen)
                        {
                            <div class="row justify-content-center">
                                <div class="col-auto">
                                    <i class="fa-solid fa-cog"></i>
                                </div>
                            </div>
                        }
                        <div class="row">
                            <div class="col">
                                <p>OS Settings</p>
                            </div>
                        </div>
                    </div>
                </NavLink>
                <NavLink class="row" href="/uefi/perms" Match="NavLinkMatch.All" @onclick="@(() => SetPageContext("/uefi/perms"))">
                    <div class="col">
                        @if (!IsMobileScreen)
                        {
                            <div class="row justify-content-center">
                                <div class="col-auto">
                                    <i class="fa-solid fa-bell"></i>
                                </div>
                            </div>
                        }
                        <div class="row">
                            <div class="col">
                                <p>OS Permissions</p>
                            </div>
                        </div>
                    </div>
                </NavLink>
                <NavLink class="row" href="/uefi/maintenance" Match="NavLinkMatch.All" @onclick="@(() => SetPageContext("/uefi/maintenance"))">
                    <div class="col">
                        @if (!IsMobileScreen)
                        {
                            <div class="row justify-content-center">
                                <div class="col-auto">
                                    <i class="fa-solid fa-wrench"></i>
                                </div>
                            </div>
                        }
                        <div class="row">
                            <div class="col">
                                <p>OS Maintenance</p>
                            </div>
                        </div>
                    </div>
                </NavLink>
                <NavLink class="row" href="/uefi/about" Match="NavLinkMatch.All" @onclick="@(() => SetPageContext("/uefi/about"))">
                    <div class="col">
                        @if (!IsMobileScreen)
                        {
                            <div class="row justify-content-center">
                                <div class="col-auto">
                                    <i class="fa-solid fa-info"></i>
                                </div>
                            </div>
                        }
                        <div class="row">
                            <div class="col">
                                <p>About Arasaki</p>
                            </div>
                        </div>
                    </div>
                </NavLink>
                @if (IsMobileScreen)
                {
                    <div class="row">
                        <VersionDisplay />
                    </div>
                }
            </div>
        </div>
    </div>
}

@inject NavigationManager NavigationManager
@inject JSInterop.UIInterop UIInterop
@inject UIState UIState

@code 
{
    private bool IsSpecialActive = false;

    private bool IsMobileScreen = true;
    private bool IsNavigationBarVisible = false;

    protected override async Task OnParametersSetAsync()
    {
        Uri navURI = new(NavigationManager.Uri);
        SetPageContext(navURI.AbsolutePath);
        IsMobileScreen = await UIInterop.IsMobileScreen();
        IsNavigationBarVisible = !IsMobileScreen;
    }

    private void SetPageContext(string relativeURL)
    {
        if (!relativeURL.Contains("_blazor"))
        {
            UIState.CurrentPageContext = UIState.PageContexts.First(x => x.RelativeURLs.Contains(relativeURL));
            IsSpecialActive = UIState.CurrentPageContext.RelativeURLs[0] == "/uefi";
            if (IsMobileScreen) IsNavigationBarVisible = false;
        }
    }
}
