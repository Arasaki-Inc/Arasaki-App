<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>
<ContextualBackground />
<NavigationBar />
<Footer />

@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject JSInterop JSInterop
@inject UIState UIState

@code
{
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Uri navURI = new(NavigationManager.Uri);
        UIState.PageContexts = new()
        {
            new PageContext
            {
                PublicName = "Arasaki UEFI",
                PrivateName = "uefi",
                RelativeURLs = new() { "/uefi", "/" },
                BackgroundRelativeURL = "/img/server/backgrounds/uefi.svg"
            },
            new PageContext
            {
                PublicName = "App Settings",
                PrivateName = "settings",
                RelativeURLs = new() { "/uefi/settings" },
                BackgroundRelativeURL = "/img/server/backgrounds/settings.svg"
            },
            new PageContext
            {
                PublicName = "Permissions",
                PrivateName = "permissions",
                RelativeURLs = new() { "/uefi/perms" },
                BackgroundRelativeURL = "/img/server/backgrounds/permissions.svg"
            },
            new PageContext
            {
                PublicName = "Changelog",
                PrivateName = "changelog",
                RelativeURLs = new() { "/uefi/changelog" },
                BackgroundRelativeURL = "/img/server/backgrounds/changelog.svg"
            },
            new PageContext
            {
                PublicName = "About",
                PrivateName = "about",
                RelativeURLs = new() { "/uefi/about" },
                BackgroundRelativeURL = "/img/server/backgrounds/about.svg"
            }
        };
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSInterop.InitialiseJSDotNetRuntimeReferences(JSRuntime, Services.Get<JSInterop.RuntimeInterop>(), "runtime");
            await JSInterop.InitialiseJSDotNetRuntimeReferences(JSRuntime, Services.Get<JSInterop.UIInterop>(), "ui");
        }
    }
}